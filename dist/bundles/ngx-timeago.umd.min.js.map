{
  "version": 3,
  "file": "ngx-timeago.umd.min.js",
  "sources": [
    "ng://ngx-timeago/node_modules/tslib/tslib.es6.js",
    "ng://ngx-timeago/out/util.ts",
    "ng://ngx-timeago/out/timeago.clock.ts",
    "ng://ngx-timeago/out/timeago.intl.ts",
    "ng://ngx-timeago/out/timeago.formatter.ts",
    "ng://ngx-timeago/out/timeago.directive.ts",
    "ng://ngx-timeago/out/timeago.pipe.ts",
    "ng://ngx-timeago/out/timeago.module.ts"
  ],
  "sourcesContent": [
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n",
    "export function isDefined(value: any): boolean {\r\n  return typeof value !== 'undefined' && value !== null;\r\n}\r\n\r\nexport function coerceBooleanProperty(value: any): boolean {\r\n  return value != null && `${value}` !== 'false';\r\n}\r\n\r\nexport function dateParser(date: any): Date {\r\n  const parsed = new Date(date);\r\n  if (!Number.isNaN(parsed.valueOf())) {\r\n    return parsed;\r\n  }\r\n\r\n  const parts: string[] = String(date).match(/\\d+/g);\r\n  if (parts === null || parts.length <= 2) {\r\n    return parsed;\r\n  } else {\r\n    const [firstP, secondP, ...restPs] = parts.map(x => parseInt(x, 10));\r\n    return new Date(Date.UTC(firstP, secondP - 1, ...restPs));\r\n  }\r\n}\r\n\r\nexport const MINUTE = 60;\r\nexport const HOUR = MINUTE * 60;\r\nexport const DAY = HOUR * 24;\r\nexport const WEEK = DAY * 7;\r\nexport const MONTH = DAY * 30;\r\nexport const YEAR = DAY * 365;\r\n",
    "import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { timer } from 'rxjs/observable/timer';\r\nimport { expand, skip } from 'rxjs/operators';\r\nimport { DAY, HOUR, MINUTE } from './util';\r\n\r\nexport abstract class TimeagoClock {\r\n  abstract tick(then: number): Observable<any>;\r\n}\r\n\r\n@Injectable()\r\nexport class TimeagoDefaultClock extends TimeagoClock {\r\n  tick(then: number): Observable<any> {\r\n    return of(0)\r\n      .pipe(\r\n        expand(() => {\r\n          const now = Date.now();\r\n          const seconds = Math.round(Math.abs(now - then) / 1000);\r\n\r\n          const period =\r\n            seconds < MINUTE\r\n              ? 1000\r\n              : seconds < HOUR\r\n                ? 1000 * MINUTE\r\n                : seconds < DAY\r\n                  ? 1000 * HOUR\r\n                  : 0;\r\n\r\n          return period ? timer(period) : Observable.empty<never>();\r\n        }),\r\n        skip(1)\r\n      );\r\n  }\r\n}\r\n",
    "import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { StringOrFn, NumberArray } from './timeago.formatter';\r\n\r\nexport interface IL10nsStrings {\r\n  prefixAgo?: StringOrFn;\r\n  prefixFromNow?: StringOrFn;\r\n  suffixAgo?: StringOrFn;\r\n  suffixFromNow?: StringOrFn;\r\n  second?: StringOrFn;\r\n  seconds?: StringOrFn;\r\n  minute?: StringOrFn;\r\n  minutes?: StringOrFn;\r\n  hour?: StringOrFn;\r\n  hours?: StringOrFn;\r\n  day?: StringOrFn;\r\n  days?: StringOrFn;\r\n  week?: StringOrFn;\r\n  weeks?: StringOrFn;\r\n  month?: StringOrFn;\r\n  months?: StringOrFn;\r\n  year?: StringOrFn;\r\n  years?: StringOrFn;\r\n  wordSeparator?: string;\r\n  numbers?: NumberArray;\r\n};\r\n\r\n/**\r\n * To modify the text displayed, create a new instance of TimeagoIntl and\r\n * include it in a custom provider\r\n */\r\n@Injectable()\r\nexport class TimeagoIntl {\r\n\r\n  strings: IL10nsStrings;\r\n\r\n  /**\r\n   * Stream that emits whenever the l10n strings are changed\r\n   * Use this to notify directives if the l10n strings have changed after initialization.\r\n   */\r\n  readonly changes: Subject<void> = new Subject<void>();\r\n}\r\n",
    "import { Injectable } from '@angular/core';\r\nimport { TimeagoIntl } from './timeago.intl';\r\nimport { MINUTE, HOUR, DAY, WEEK, MONTH, YEAR } from './util';\r\n\r\nexport type Unit = 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'year';\r\n\r\nexport type Suffix = 'ago' | 'from now';\r\n\r\nexport type StringOrFn = ((value: number, millisDelta:  number) => string) | string;\r\n\r\nexport type NumberArray = [ string, string, string, string, string, string, string, string, string, string ];\r\n\r\nconst defaultFormattter = function(then: number): {value: number, unit: Unit, suffix: Suffix} {\r\n  const now = Date.now();\r\n  const seconds = Math.round(Math.abs(now - then) / 1000);\r\n  const suffix: Suffix = then < now ? 'ago' : 'from now';\r\n\r\n  const [value, unit]: [number, Unit] =\r\n    seconds < MINUTE\r\n      ? [Math.round(seconds), 'second']\r\n      : seconds < HOUR\r\n        ? [Math.round(seconds / MINUTE), 'minute']\r\n        : seconds < DAY\r\n          ? [Math.round(seconds / HOUR), 'hour']\r\n          : seconds < WEEK\r\n            ? [Math.round(seconds / DAY), 'day']\r\n            : seconds < MONTH\r\n              ? [Math.round(seconds / WEEK), 'week']\r\n              : seconds < YEAR\r\n                ? [Math.round(seconds / MONTH), 'month']\r\n                : [Math.round(seconds / YEAR), 'year'];\r\n\r\n  return {value, unit, suffix};\r\n}\r\n\r\nexport abstract class TimeagoFormatter {\r\n  abstract format(then: number): string\r\n}\r\n\r\n@Injectable()\r\nexport class TimeagoDefaultFormatter extends TimeagoFormatter {\r\n  format(then: number): string {\r\n    const {suffix, value, unit} = defaultFormattter(then);\r\n    return this.parse(value, unit, suffix);\r\n  }\r\n\r\n  private parse(value: number, unit: Unit, suffix: Suffix): string {\r\n    if (value !== 1) {\r\n      unit += 's';\r\n    }\r\n    return value + ' ' + unit + ' ' + suffix;\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class TimeagoCustomFormatter extends TimeagoFormatter {\r\n  constructor(private intl: TimeagoIntl) {\r\n    super();\r\n  }\r\n\r\n  format(then: number): string {\r\n    const {suffix, value, unit} = defaultFormattter(then);\r\n    return this.parse(value, unit, suffix, Date.now(), then);\r\n  }\r\n\r\n  private parse(value: number, unit: Unit, suffix: Suffix, now: number, then: number) {\r\n    /** convert weeks to days if strings don't handle weeks */\r\n    if (unit === 'week' && !this.intl.strings.week && !this.intl.strings.weeks) {\r\n      const days = Math.round(Math.abs(now - then) / (1000 * 60 * 60 * 24));\r\n      value = days;\r\n      unit = 'day';\r\n    }\r\n\r\n    /** create a normalize function for given value */\r\n    const normalize = this.normalizeFn(value, now - then, this.intl.strings.numbers);\r\n\r\n    /** The eventual return value stored in an array so that the wordSeparator can be used */\r\n    const dateString: string[] = [];\r\n\r\n    /** handle prefixes */\r\n    if (suffix === 'ago' && this.intl.strings.prefixAgo) {\r\n      dateString.push(normalize(this.intl.strings.prefixAgo));\r\n    }\r\n    if (suffix === 'from now' && this.intl.strings.prefixFromNow) {\r\n      dateString.push(normalize(this.intl.strings.prefixFromNow));\r\n    }\r\n\r\n    /** Handle Main number and unit */\r\n    const isPlural = value > 1;\r\n    if (isPlural) {\r\n      const stringFn: StringOrFn = this.intl.strings[unit + 's'] || this.intl.strings[unit] || '%d ' + unit;\r\n      dateString.push(normalize(stringFn));\r\n    } else {\r\n      const stringFn: StringOrFn = this.intl.strings[unit] || this.intl.strings[unit + 's'] || '%d ' + unit;\r\n      dateString.push(normalize(stringFn));\r\n    }\r\n\r\n    /** Handle Suffixes */\r\n    if (suffix === 'ago' && this.intl.strings.suffixAgo) {\r\n      dateString.push(normalize(this.intl.strings.suffixAgo));\r\n    }\r\n    if (suffix === 'from now' && this.intl.strings.suffixFromNow) {\r\n      dateString.push(normalize(this.intl.strings.suffixFromNow));\r\n    }\r\n\r\n    /** join the array into a string and return it */\r\n    const wordSeparator = typeof this.intl.strings.wordSeparator === 'string' ? this.intl.strings.wordSeparator : ' ';\r\n    return dateString.join(wordSeparator);\r\n  }\r\n\r\n  /**\r\n   * If the numbers array is present, format numbers with it,\r\n   * otherwise just cast the number to a string and return it\r\n  */\r\n  private normalizeNumber(numbers: NumberArray, value: number) {\r\n    return numbers && numbers.length === 10\r\n      ? String(value).split('')\r\n          .map((digit: string) => digit.match(/^[0-9]$/) ? numbers[parseInt(digit, 10)] : digit)\r\n          .join('')\r\n      : String(value);\r\n  }\r\n\r\n  /**\r\n   * Take a string or a function that takes number of days and returns a string\r\n   * and provide a uniform API to create string parts\r\n  */\r\n  private normalizeFn(value: number, millisDelta: number, numbers?: NumberArray) {\r\n    return (stringOrFn: StringOrFn) =>\r\n      typeof stringOrFn === 'function'\r\n      ? stringOrFn(value, millisDelta).replace(/%d/g, this.normalizeNumber(numbers, value))\r\n      : stringOrFn.replace(/%d/g, this.normalizeNumber(numbers, value));\r\n  }\r\n}\r\n",
    "import { Directive, Input, ElementRef, Optional, OnChanges, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\nimport { Subscription, Subject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { TimeagoClock } from './timeago.clock';\r\nimport { TimeagoFormatter } from './timeago.formatter';\r\nimport { TimeagoIntl } from './timeago.intl';\r\nimport { isDefined, coerceBooleanProperty, dateParser } from './util';\r\n\r\n@Directive({\r\n  selector: '[timeago]',\r\n  exportAs: 'timeago',\r\n})\r\nexport class TimeagoDirective implements OnChanges, OnDestroy {\r\n  private intlSubscription: Subscription;\r\n  private clockSubscription: Subscription;\r\n\r\n  /**\r\n   * Emits on:\r\n   * - Input change\r\n   * - Intl change\r\n   * - Clock tick\r\n  */\r\n  stateChanges = new Subject<any>();\r\n\r\n  /** The Date to display. An actual Date object or something that can be fed to new Date. */\r\n  @Input()\r\n  get date(): any {\r\n    return this._date;\r\n  }\r\n  set date(date: any) {\r\n    this._date = dateParser(date).valueOf();\r\n    if (this._date) {\r\n      if (this.clockSubscription) {\r\n        this.clockSubscription.unsubscribe();\r\n        this.clockSubscription = undefined;\r\n      }\r\n      this.clockSubscription = this.clock.tick(this.date)\r\n        .pipe(filter(() => this.live, this))\r\n        .subscribe(() => this.stateChanges.next());\r\n    } else {\r\n      throw new SyntaxError(`Wrong parameter in TimeagoDirective. Expected a valid date, received: ${date}`);\r\n    }\r\n  }\r\n  private _date: number;\r\n\r\n  /** If the directive should update itself over time */\r\n  @Input()\r\n  get live(): boolean {\r\n    return this._live;\r\n  }\r\n  set live(live: boolean) {\r\n    this._live = coerceBooleanProperty(live);\r\n  }\r\n  private _live = true;\r\n\r\n  constructor(@Optional() intl: TimeagoIntl,\r\n              private cd: ChangeDetectorRef,\r\n              formatter: TimeagoFormatter,\r\n              element: ElementRef,\r\n              private clock: TimeagoClock) {\r\n    if (intl) {\r\n      this.intlSubscription = intl.changes.subscribe(() => this.stateChanges.next());\r\n    }\r\n    this.stateChanges.subscribe(() => {\r\n      this.setContent(element.nativeElement, formatter.format(this.date));\r\n      this.cd.markForCheck();\r\n    });\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  setContent(node: any, content: string) {\r\n    if (isDefined(node.textContent)) {\r\n      node.textContent = content;\r\n    } else {\r\n      node.data = content;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.intlSubscription) {\r\n      this.intlSubscription.unsubscribe();\r\n      this.intlSubscription = undefined;\r\n    }\r\n    if (this.clockSubscription) {\r\n      this.clockSubscription.unsubscribe();\r\n      this.clockSubscription = undefined;\r\n    }\r\n    this.stateChanges.complete();\r\n  }\r\n}\r\n",
    "import { Injectable, OnDestroy, Pipe, PipeTransform, Optional, ChangeDetectorRef } from '@angular/core';\r\nimport { Subscription, Subject } from 'rxjs';\r\nimport { TimeagoClock } from './timeago.clock';\r\nimport { TimeagoFormatter } from './timeago.formatter';\r\nimport { TimeagoIntl } from './timeago.intl';\r\nimport { isDefined, coerceBooleanProperty, dateParser } from './util';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Injectable()\r\n@Pipe({\r\n  name: 'timeago',\r\n  pure: false, // required to update the value when stateChanges emits\r\n})\r\nexport class TimeagoPipe implements PipeTransform, OnDestroy {\r\n  private intlSubscription: Subscription;\r\n  private clockSubscription: Subscription;\r\n\r\n  private date: number;\r\n  private value: string;\r\n  private live = true;\r\n\r\n  /**\r\n   * Emits on:\r\n   * - Input change\r\n   * - Intl change\r\n   * - Clock tick\r\n  */\r\n  stateChanges = new Subject<void>();\r\n\r\n  constructor(@Optional() intl: TimeagoIntl,\r\n    cd: ChangeDetectorRef,\r\n    formatter: TimeagoFormatter,\r\n    private clock: TimeagoClock) {\r\n    if (intl) {\r\n      this.intlSubscription = intl.changes.subscribe(() => this.stateChanges.next());\r\n    }\r\n    this.stateChanges.subscribe(() => {\r\n      this.value = formatter.format(this.date);\r\n      cd.markForCheck();\r\n    });\r\n  }\r\n\r\n  transform(date: any, ...args: any[]) {\r\n    const _date = dateParser(date).valueOf();\r\n    let _live: boolean;\r\n\r\n    _live = isDefined(args[0])\r\n      ? coerceBooleanProperty(args[0])\r\n      : this.live;\r\n\r\n    if (this.date === _date && this.live === _live) {\r\n      return this.value;\r\n    }\r\n\r\n    this.date = _date;\r\n    this.live = _live;\r\n\r\n    if (this.date) {\r\n      if (this.clockSubscription) {\r\n        this.clockSubscription.unsubscribe();\r\n        this.clockSubscription = undefined;\r\n      }\r\n      this.clockSubscription = this.clock.tick(this.date)\r\n        .pipe(filter(() => this.live, this))\r\n        .subscribe(() => this.stateChanges.next());\r\n      this.stateChanges.next();\r\n    } else {\r\n      throw new SyntaxError(`Wrong parameter in TimeagoPipe. Expected a valid date, received: ${date}`);\r\n    }\r\n\r\n    return this.value;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.intlSubscription) {\r\n      this.intlSubscription.unsubscribe();\r\n      this.intlSubscription = undefined;\r\n    }\r\n    if (this.clockSubscription) {\r\n      this.clockSubscription.unsubscribe();\r\n      this.clockSubscription = undefined;\r\n    }\r\n    this.stateChanges.complete();\r\n  }\r\n}\r\n",
    "import { NgModule, ModuleWithProviders, Provider } from '@angular/core';\r\nimport { TimeagoDirective } from './timeago.directive';\r\nimport { TimeagoPipe } from './timeago.pipe';\r\nimport { TimeagoClock, TimeagoDefaultClock } from './timeago.clock';\r\nimport { TimeagoFormatter, TimeagoDefaultFormatter } from './timeago.formatter';\r\n\r\nexport interface TimeagoModuleConfig {\r\n  clock?: Provider;\r\n  intl?: Provider;\r\n  formatter?: Provider;\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TimeagoDirective,\r\n    TimeagoPipe,\r\n  ],\r\n  exports: [\r\n    TimeagoDirective,\r\n    TimeagoPipe,\r\n  ],\r\n})\r\nexport class TimeagoModule {\r\n  /**\r\n   * Use this method in your root module to provide the TimeagoModule\r\n   */\r\n  static forRoot(config: TimeagoModuleConfig = {}): ModuleWithProviders {\r\n    return {\r\n      ngModule: TimeagoModule,\r\n      providers: [\r\n        config.clock || {provide: TimeagoClock, useClass: TimeagoDefaultClock},\r\n        config.intl || [],\r\n        config.formatter || {provide: TimeagoFormatter, useClass: TimeagoDefaultFormatter},\r\n      ],\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Use this method in your other (non root) modules to import the directive/pipe\r\n   */\r\n  static forChild(config: TimeagoModuleConfig = {}): ModuleWithProviders {\r\n    return {\r\n      ngModule: TimeagoModule,\r\n      providers: [\r\n        config.clock || {provide: TimeagoClock, useClass: TimeagoDefaultClock},\r\n        config.intl || [],\r\n        config.formatter || {provide: TimeagoFormatter, useClass: TimeagoDefaultFormatter},\r\n      ],\r\n    };\r\n  }\r\n}\r\n"
  ],
  "names": [
    "extendStatics",
    "d",
    "b",
    "Object",
    "setPrototypeOf",
    "__proto__",
    "Array",
    "p",
    "hasOwnProperty",
    "__extends",
    "__",
    "this",
    "constructor",
    "prototype",
    "create",
    "__read",
    "o",
    "n",
    "m",
    "Symbol",
    "iterator",
    "r",
    "e",
    "i",
    "call",
    "ar",
    "next",
    "done",
    "push",
    "value",
    "error",
    "isDefined",
    "coerceBooleanProperty",
    "dateParser",
    "date",
    "parsed",
    "Date",
    "Number",
    "isNaN",
    "valueOf",
    "parts",
    "String",
    "match",
    "length",
    "_a",
    "map",
    "x",
    "parseInt",
    "firstP",
    "secondP",
    "restPs",
    "slice",
    "UTC",
    "apply",
    "arguments",
    "concat",
    "__spread",
    "_super",
    "HOUR",
    "MINUTE",
    "DAY",
    "WEEK",
    "MONTH",
    "YEAR",
    "TimeagoClock",
    "TimeagoDefaultClock",
    "tslib_1.__extends",
    "tick",
    "then",
    "of",
    "pipe",
    "expand",
    "now",
    "seconds",
    "Math",
    "round",
    "abs",
    "period",
    "timer",
    "Observable",
    "empty",
    "skip",
    "type",
    "Injectable",
    "TimeagoIntl",
    "changes",
    "Subject",
    "defaultFormattter",
    "suffix",
    "unit",
    "TimeagoFormatter",
    "TimeagoDefaultFormatter",
    "format",
    "parse",
    "TimeagoCustomFormatter",
    "intl",
    "strings",
    "week",
    "weeks",
    "normalize",
    "normalizeFn",
    "numbers",
    "dateString",
    "prefixAgo",
    "prefixFromNow",
    "stringFn",
    "suffixAgo",
    "suffixFromNow",
    "wordSeparator",
    "join",
    "normalizeNumber",
    "split",
    "digit",
    "millisDelta",
    "_this",
    "stringOrFn",
    "replace",
    "TimeagoDirective",
    "defineProperty",
    "get",
    "_date",
    "set",
    "SyntaxError",
    "clockSubscription",
    "unsubscribe",
    "undefined",
    "clock",
    "filter",
    "live",
    "subscribe",
    "stateChanges",
    "_live",
    "ngOnChanges",
    "setContent",
    "node",
    "content",
    "textContent",
    "data",
    "ngOnDestroy",
    "intlSubscription",
    "complete",
    "cd",
    "formatter",
    "element",
    "nativeElement",
    "markForCheck",
    "Directive",
    "args",
    "selector",
    "exportAs",
    "decorators",
    "Optional",
    "ChangeDetectorRef",
    "ElementRef",
    "Input",
    "TimeagoPipe",
    "transform",
    "_i",
    "Pipe",
    "name",
    "pure",
    "TimeagoModule",
    "forRoot",
    "config",
    "ngModule",
    "providers",
    "provide",
    "useClass",
    "forChild",
    "NgModule",
    "declarations",
    "exports"
  ],
  "mappings": "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"
}
